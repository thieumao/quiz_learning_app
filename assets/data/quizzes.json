{
  "quizzes": [
    {"id":"1","title":"Flutter Basics","description":"Test your knowledge of Flutter fundamentals","category":"Flutter","difficulty":"Beginner","questions":[{"id":"1-1","questionText":"What is Flutter?","options":["A programming language","A UI framework for building cross-platform applications","A database management system","An operating system"],"correctAnswerIndex":1,"explanation":"Flutter is a UI framework developed by Google for building natively compiled applications for mobile, web, and desktop from a single codebase."},{"id":"1-2","questionText":"Which widget is used to create a scrollable list in Flutter?","options":["Container","ListView","Column","Row"],"correctAnswerIndex":1,"explanation":"ListView is a scrollable list of widgets arranged linearly."},{"id":"1-3","questionText":"What is the main purpose of setState() in Flutter?","options":["To create a new widget","To update the UI when data changes","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"setState() is used to notify the framework that the internal state of a State object has changed, which triggers a rebuild of the widget."},{"id":"1-4","questionText":"What is a StatelessWidget in Flutter?","options":["A widget that can change its state","A widget that cannot change its state once created","A widget that manages state","A widget that handles user input"],"correctAnswerIndex":1,"explanation":"A StatelessWidget is a widget that cannot change its state once created. It is immutable."},{"id":"1-5","questionText":"Which widget is used to add padding around another widget?","options":["Container","Padding","Margin","Spacing"],"correctAnswerIndex":1,"explanation":"The Padding widget is used to add padding (empty space) around another widget."},{"id":"1-6","questionText":"What is the purpose of the MaterialApp widget?","options":["To create a new app","To provide Material Design theming and navigation for the app","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"MaterialApp is a widget that provides Material Design theming and navigation for the app."},{"id":"1-7","questionText":"Which widget is used to create a button in Flutter?","options":["Text","Button","ElevatedButton","All of the above"],"correctAnswerIndex":3,"explanation":"Flutter provides multiple button widgets like TextButton, ElevatedButton, and OutlinedButton."},{"id":"1-8","questionText":"What is the purpose of the Scaffold widget?","options":["To create a new screen","To provide a basic visual layout structure for Material Design","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"Scaffold provides a basic visual layout structure for Material Design, including app bar, body, and floating action button."},{"id":"1-9","questionText":"Which widget is used to create a text input field?","options":["Text","TextField","Input","Form"],"correctAnswerIndex":1,"explanation":"TextField is a widget that creates a text input field where users can enter text."},{"id":"1-10","questionText":"What is the purpose of the Center widget?","options":["To create a new screen","To center its child widget both horizontally and vertically","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"The Center widget centers its child widget both horizontally and vertically within its parent."}]},
    {"id":"2","title":"Flutter Intermediate","description":"Intermediate concepts in Flutter","category":"Flutter","difficulty":"Intermediate","questions":[{"id":"2-1","questionText":"What is a Future in Flutter?","options":["A widget that displays a future date","A class representing a value or error that will be available at some time in the future","A function that runs in the future","A state management solution"],"correctAnswerIndex":1,"explanation":"A Future in Dart (Flutter) is a class representing a value or error that will be available at some time in the future."},{"id":"2-2","questionText":"Which package is commonly used for state management in Flutter?","options":["http","provider","sqflite","shared_preferences"],"correctAnswerIndex":1,"explanation":"Provider is a popular package for state management in Flutter."},{"id":"2-3","questionText":"What is the purpose of the async keyword in Dart (Flutter)?","options":["To create a new thread","To mark a function as asynchronous, allowing the use of await and handling of Future objects","To define a class","To handle errors"],"correctAnswerIndex":1,"explanation":"The async keyword is used to mark a function as asynchronous, allowing the use of await and handling of Future objects."},{"id":"2-4","questionText":"What is a Stream in Flutter?","options":["A widget that displays flowing water","A sequence of asynchronous events","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"A Stream is a sequence of asynchronous events that can be listened to and handled."},{"id":"2-5","questionText":"Which widget is used to create a custom scrollable area?","options":["ListView","CustomScrollView","SingleChildScrollView","ScrollView"],"correctAnswerIndex":1,"explanation":"CustomScrollView lets you create custom scrollable areas with different scrolling behaviors."},{"id":"2-6","questionText":"What is the purpose of the InheritedWidget?","options":["To create a new widget","To efficiently pass data down the widget tree","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"InheritedWidget is a base class for widgets that efficiently pass data down the widget tree."},{"id":"2-7","questionText":"Which package is commonly used for HTTP requests in Flutter?","options":["http","dio","chopper","retrofit"],"correctAnswerIndex":0,"explanation":"The http package is commonly used for making HTTP requests in Flutter."},{"id":"2-8","questionText":"What is the purpose of the GestureDetector widget?","options":["To create a new widget","To detect and handle various gestures like taps, drags, and swipes","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"GestureDetector is a widget that detects and handles various gestures like taps, drags, and swipes."},{"id":"2-9","questionText":"Which widget is used to create a bottom navigation bar?","options":["AppBar","BottomNavigationBar","NavigationBar","TabBar"],"correctAnswerIndex":1,"explanation":"BottomNavigationBar is a widget that creates a bottom navigation bar with multiple items."},{"id":"2-10","questionText":"What is the purpose of the FutureBuilder widget?","options":["To create a new widget","To build a widget based on the latest snapshot of a Future","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"FutureBuilder is a widget that builds itself based on the latest snapshot of a Future."}]},
    {"id":"3","title":"Flutter Advanced","description":"Advanced Flutter concepts and best practices","category":"Flutter","difficulty":"Advanced","questions":[{"id":"3-1","questionText":"What is a Flutter isolate?","options":["A widget that isolates a portion of the UI","A separate execution thread that runs Dart code concurrently, allowing parallel execution without blocking the main thread","A state management solution","A Flutter plugin"],"correctAnswerIndex":1,"explanation":"A Flutter isolate is a separate execution thread that runs Dart code concurrently, allowing parallel execution without blocking the main thread."},{"id":"3-2","questionText":"Which Flutter widget is used for custom painting?","options":["CustomPaint","CustomScrollView","CustomSingleChildLayout","CustomMultiChildLayout"],"correctAnswerIndex":0,"explanation":"CustomPaint is a widget that provides a canvas on which to draw during the paint phase."},{"id":"3-3","questionText":"What is the purpose of a Flutter InheritedWidget?","options":["To create a new widget","To efficiently pass data down the widget tree without manually passing it to every child","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"InheritedWidget is a base class for widgets that efficiently pass data down the widget tree without manually passing it to every child."},{"id":"3-4","questionText":"What is a Flutter plugin?","options":["A UI component","A package that adds platform-specific functionality to Flutter apps","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"A Flutter plugin is a package that adds platform-specific functionality to Flutter apps."},{"id":"3-5","questionText":"Which widget is used for custom painting in Flutter?","options":["CustomPaint","CustomScrollView","CustomSingleChildLayout","CustomMultiChildLayout"],"correctAnswerIndex":0,"explanation":"CustomPaint is a widget that provides a canvas on which to draw during the paint phase."},{"id":"3-6","questionText":"What is the purpose of a Flutter isolate?","options":["To create a new widget","To run code in a separate thread","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"A Flutter isolate is a separate execution thread that runs Dart code concurrently."},{"id":"3-7","questionText":"Which package is commonly used for state management in Flutter?","options":["Provider","Bloc","Riverpod","All of the above"],"correctAnswerIndex":3,"explanation":"Flutter has multiple state management solutions including Provider, Bloc, and Riverpod."},{"id":"3-8","questionText":"What is the purpose of the Navigator 2.0 API?","options":["To create a new screen","To provide a more flexible and powerful navigation system","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"Navigator 2.0 API provides a more flexible and powerful navigation system in Flutter."},{"id":"3-9","questionText":"Which widget is used for custom animations in Flutter?","options":["AnimatedContainer","CustomAnimation","AnimationController","All of the above"],"correctAnswerIndex":3,"explanation":"Flutter provides multiple widgets and classes for creating custom animations."},{"id":"3-10","questionText":"What is the purpose of the Flutter engine?","options":["To create a new app","To provide the runtime environment for Flutter apps","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"The Flutter engine provides the runtime environment for Flutter apps, including the Dart VM and rendering engine."}]},
    {"id":"4","title":"React Native Basics","description":"Test your knowledge of React Native fundamentals","category":"React Native","difficulty":"Beginner","questions":[{"id":"4-1","questionText":"What is React Native?","options":["A programming language","A framework for building native mobile apps using JavaScript and React","A database management system","An operating system"],"correctAnswerIndex":1,"explanation":"React Native is a framework for building native mobile apps using JavaScript and React."},{"id":"4-2","questionText":"Which component is used to create a scrollable list in React Native?","options":["View","FlatList","Text","Button"],"correctAnswerIndex":1,"explanation":"FlatList is a component used to create a scrollable list in React Native."},{"id":"4-3","questionText":"What is the purpose of useState in React Native?","options":["To create a new component","To manage state in a functional component","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"useState is a React Hook that lets you add state to a functional component."},{"id":"4-4","questionText":"What is a React Native component?","options":["A UI element","A reusable piece of code that returns React elements","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"A React Native component is a reusable piece of code that returns React elements to be rendered."},{"id":"4-5","questionText":"Which component is used to create a button in React Native?","options":["Text","Button","TouchableOpacity","All of the above"],"correctAnswerIndex":3,"explanation":"React Native provides multiple components for creating buttons, including Button and TouchableOpacity."},{"id":"4-6","questionText":"What is the purpose of the StyleSheet API?","options":["To create a new screen","To define and manage styles for components","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"The StyleSheet API is used to define and manage styles for React Native components."},{"id":"4-7","questionText":"Which component is used to create a text input field?","options":["Text","TextInput","Input","Form"],"correctAnswerIndex":1,"explanation":"TextInput is a component that creates a text input field where users can enter text."},{"id":"4-8","questionText":"What is the purpose of the View component?","options":["To create a new screen","To create a container that supports layout and styling","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"View is a fundamental component that creates a container supporting layout and styling."},{"id":"4-9","questionText":"What is the purpose of the SafeAreaView component?","options":["To create a new screen","To render content within the safe area boundaries of a device","To handle user input","To manage state"],"correctAnswerIndex":1,"explanation":"SafeAreaView renders content within the safe area boundaries of a device."}]},
    {"id":"5","title":"React Native Intermediate","description":"Intermediate concepts in React Native","category":"React Native","difficulty":"Intermediate","questions":[{"id":"5-1","questionText":"What is a React Native bridge?","options":["A UI component","A mechanism that allows JavaScript code to communicate with native modules","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"A React Native bridge is a mechanism that allows JavaScript code to communicate with native modules."},{"id":"5-2","questionText":"Which library is commonly used for navigation in React Native?","options":["Redux","React Navigation","Axios","AsyncStorage"],"correctAnswerIndex":1,"explanation":"React Navigation is a popular library for handling navigation in React Native."},{"id":"5-3","questionText":"What is the purpose of the useEffect hook?","options":["To create a new component","To perform side effects in functional components","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"useEffect is a React Hook that lets you perform side effects in functional components."},{"id":"5-4","questionText":"Which library is commonly used for state management in React Native?","options":["React Navigation","Redux","Axios","AsyncStorage"],"correctAnswerIndex":1,"explanation":"Redux is a popular library for state management in React Native."},{"id":"5-5","questionText":"What is the purpose of the Context API?","options":["To create a new component","To share state between components without prop drilling","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"The Context API provides a way to share state between components without prop drilling."},{"id":"5-6","questionText":"Which library is commonly used for HTTP requests in React Native?","options":["fetch","Axios","SuperAgent","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple libraries for HTTP requests, including fetch and Axios."},{"id":"5-7","questionText":"What is the purpose of the AsyncStorage API?","options":["To create a new component","To store data persistently on the device","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"AsyncStorage is an asynchronous, persistent, key-value storage system for React Native."},{"id":"5-8","questionText":"Which library is commonly used for testing in React Native?","options":["Jest","React Native Testing Library","Detox","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple testing libraries, including Jest, React Native Testing Library, and Detox."},{"id":"5-9","questionText":"What is the purpose of the CodePush service?","options":["To create a new component","To deploy updates to React Native apps without going through the app store","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"CodePush allows you to deploy updates to React Native apps without going through the app store."},{"id":"5-10","questionText":"Which library is commonly used for deep linking in React Native?","options":["React Navigation","Deep Linking","Universal Links","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple solutions for deep linking, including React Navigation and Universal Links."}]},
    {"id":"6","title":"React Native Advanced","description":"Advanced React Native concepts and best practices","category":"React Native","difficulty":"Advanced","questions":[{"id":"6-1","questionText":"What is a React Native native module?","options":["A UI component","A piece of native code that can be called from JavaScript","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"A React Native native module is a piece of native code that can be called from JavaScript."},{"id":"6-2","questionText":"Which library is commonly used for animations in React Native?","options":["Animated","Reanimated","Lottie","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple libraries for animations, including Animated, Reanimated, and Lottie."},{"id":"6-3","questionText":"What is the purpose of the Hermes engine?","options":["To create a new component","To improve performance by using a JavaScript engine optimized for mobile","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Hermes is a JavaScript engine optimized for mobile, used in React Native to improve performance."},{"id":"6-4","questionText":"Which library is commonly used for testing in React Native?","options":["Jest","React Native Testing Library","Detox","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple testing libraries, including Jest, React Native Testing Library, and Detox."},{"id":"6-5","questionText":"What is the purpose of the CodePush service?","options":["To create a new component","To deploy updates to React Native apps without going through the app store","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"CodePush allows you to deploy updates to React Native apps without going through the app store."},{"id":"6-6","questionText":"Which library is commonly used for deep linking in React Native?","options":["React Navigation","Deep Linking","Universal Links","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple solutions for deep linking, including React Navigation and Universal Links."},{"id":"6-7","questionText":"What is the purpose of the React Native CLI?","options":["To create a new component","To create and manage React Native projects","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"The React Native CLI is a command-line interface for creating and managing React Native projects."},{"id":"6-8","questionText":"Which library is commonly used for UI testing in React Native?","options":["Jest","React Native Testing Library","Detox","All of the above"],"correctAnswerIndex":3,"explanation":"React Native supports multiple libraries for UI testing, including Jest, React Native Testing Library, and Detox."},{"id":"6-9","questionText":"What is the purpose of the React Native Profiler?","options":["To create a new component","To profile and debug apps","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"React Native Profiler is a tool for profiling and debugging React Native apps."},{"id":"6-10","questionText":"What is the purpose of the React Native Hermes engine?","options":["To create a new component","To improve performance by using a JavaScript engine optimized for mobile","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Hermes is a JavaScript engine optimized for mobile, used in React Native to improve performance."}]},
    {"id":"7","title":"Kotlin Multiplatform (KMP) Basics","description":"Test your knowledge of Kotlin Multiplatform fundamentals","category":"Kotlin Multiplatform (KMP)","difficulty":"Beginner","questions":[{"id":"7-1","questionText":"What is Kotlin Multiplatform (KMP)?","options":["A programming language","A technology that allows you to share code (written in Kotlin) between multiple platforms (such as Android, iOS, and the web) while writing platform-specific code only when necessary","A database management system","An operating system"],"correctAnswerIndex":1,"explanation":"Kotlin Multiplatform (KMP) is a technology that allows you to share code (written in Kotlin) between multiple platforms (such as Android, iOS, and the web) while writing platform-specific code only when necessary."},{"id":"7-2","questionText":"Which Gradle plugin is used to set up a Kotlin Multiplatform project?","options":["kotlin-android","kotlin-multiplatform","kotlin-js","kotlin-native"],"correctAnswerIndex":1,"explanation":"The kotlin-multiplatform Gradle plugin is used to set up a Kotlin Multiplatform project."},{"id":"7-3","questionText":"What is a common folder structure for a Kotlin Multiplatform project?","options":["src/main/kotlin","commonMain, androidMain, iosMain, etc.","src/android, src/ios, src/web","src/kotlin"],"correctAnswerIndex":1,"explanation":"A common folder structure for a Kotlin Multiplatform project is to have folders such as commonMain, androidMain, iosMain, etc."},{"id":"7-4","questionText":"What is a Kotlin Multiplatform project?","options":["A single-platform project","A project that shares code between multiple platforms","A database management system","An operating system"],"correctAnswerIndex":1,"explanation":"A Kotlin Multiplatform project is a project that shares code between multiple platforms."},{"id":"7-5","questionText":"Which Gradle plugin is used for Kotlin Multiplatform projects?","options":["kotlin-android","kotlin-multiplatform","kotlin-js","kotlin-native"],"correctAnswerIndex":1,"explanation":"The kotlin-multiplatform Gradle plugin is used for Kotlin Multiplatform projects."},{"id":"7-6","questionText":"What is the purpose of the common module?","options":["To create a new module","To share code between platforms","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"The common module is used to share code between platforms in a Kotlin Multiplatform project."},{"id":"7-7","questionText":"Which directory structure is common in KMP projects?","options":["src/main/kotlin","commonMain, androidMain, iosMain","src/android, src/ios","src/kotlin"],"correctAnswerIndex":1,"explanation":"A common directory structure in KMP projects includes commonMain, androidMain, and iosMain."},{"id":"7-8","questionText":"What is the purpose of the expect/actual mechanism?","options":["To create a new module","To declare platform-specific implementations","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"The expect/actual mechanism is used to declare platform-specific implementations in KMP."},{"id":"7-9","questionText":"Which library is commonly used for networking in KMP?","options":["Retrofit","Ktor","OkHttp","Volley"],"correctAnswerIndex":1,"explanation":"Ktor is a popular library for networking in Kotlin Multiplatform projects."},{"id":"7-10","questionText":"What is the purpose of the kotlinx.serialization library?","options":["To create a new module","To serialize and deserialize data","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx.serialization is a library for serializing and deserializing data in Kotlin Multiplatform projects."}]},
    {"id":"8","title":"Kotlin Multiplatform (KMP) Intermediate","description":"Intermediate concepts in Kotlin Multiplatform (KMP)","category":"Kotlin Multiplatform (KMP)","difficulty":"Intermediate","questions":[{"id":"8-1","questionText":"What is a Kotlin Multiplatform (KMP) expect/actual mechanism?","options":["A UI component","A mechanism that lets you declare an expected (or "expect") declaration in common code and then provide an actual implementation in platform-specific code","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"The expect/actual mechanism in Kotlin Multiplatform lets you declare an expected (or "expect") declaration in common code and then provide an actual implementation in platform-specific code."},{"id":"8-2","questionText":"Which library is commonly used for dependency injection in KMP?","options":["Dagger","Koin","Hilt","All of the above"],"correctAnswerIndex":1,"explanation":"Koin is a popular library for dependency injection in Kotlin Multiplatform projects."},{"id":"8-3","questionText":"What is the purpose of the kotlinx.coroutines library?","options":["To create a new module","To handle asynchronous programming","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx.coroutines is a library for handling asynchronous programming in Kotlin Multiplatform."},{"id":"8-4","questionText":"What is a Kotlin Multiplatform expect/actual mechanism?","options":["A UI component","A mechanism for platform-specific implementations","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"The expect/actual mechanism is used to declare platform-specific implementations in KMP."},{"id":"8-5","questionText":"Which library is commonly used for testing in KMP?","options":["JUnit","Kotlin Test","MockK","All of the above"],"correctAnswerIndex":3,"explanation":"Kotlin Multiplatform supports multiple testing libraries, including JUnit, Kotlin Test, and MockK."},{"id":"8-6","questionText":"What is the purpose of the kotlinx-datetime library?","options":["To create a new module","To handle date and time operations","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx-datetime is a library for handling date and time operations in Kotlin Multiplatform."},{"id":"8-7","questionText":"Which library is commonly used for logging in KMP?","options":["Log4j","Kotlin Logging","Napier","All of the above"],"correctAnswerIndex":2,"explanation":"Napier is a popular logging library for Kotlin Multiplatform projects."},{"id":"8-8","questionText":"What is the purpose of the kotlinx-io library?","options":["To create a new module","To handle I/O operations","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx-io is a library for handling I/O operations in Kotlin Multiplatform."},{"id":"8-9","questionText":"What is the purpose of the kotlinx-atomicfu library?","options":["To create a new module","To handle atomic operations","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx-atomicfu is a library for handling atomic operations in Kotlin Multiplatform."},{"id":"8-10","questionText":"Which library is commonly used for image loading in KMP?","options":["Glide","Coil","KMP-Napier","All of the above"],"correctAnswerIndex":2,"explanation":"KMP-Napier is a popular library for image loading in Kotlin Multiplatform."}]},
    {"id":"9","title":"Kotlin Multiplatform (KMP) Advanced","description":"Advanced Kotlin Multiplatform (KMP) concepts and best practices","category":"Kotlin Multiplatform (KMP)","difficulty":"Advanced","questions":[{"id":"9-1","questionText":"What is a Kotlin Multiplatform (KMP) native interop?","options":["A UI component","A mechanism that allows Kotlin code to call native (e.g., Swift, Objective-C, C, C++) code and vice versa","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"Kotlin Multiplatform (KMP) native interop is a mechanism that allows Kotlin code to call native (e.g., Swift, Objective-C, C, C++) code and vice versa."},{"id":"9-2","questionText":"Which library is commonly used for UI in KMP?","options":["Compose Multiplatform","SwiftUI","Jetpack Compose","All of the above"],"correctAnswerIndex":0,"explanation":"Compose Multiplatform is a popular UI library for Kotlin Multiplatform projects."},{"id":"9-3","questionText":"What is the purpose of the kotlinx.serialization library?","options":["To create a new module","To serialize and deserialize data","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx.serialization is a library for serializing and deserializing data in Kotlin Multiplatform."},{"id":"9-4","questionText":"What is Kotlin Multiplatform native interop?","options":["A UI component","A mechanism for calling native code","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"Kotlin Multiplatform native interop is a mechanism for calling native code from Kotlin."},{"id":"9-5","questionText":"Which library is commonly used for UI in KMP?","options":["Compose Multiplatform","SwiftUI","Jetpack Compose","All of the above"],"correctAnswerIndex":0,"explanation":"Compose Multiplatform is a popular UI library for Kotlin Multiplatform projects."},{"id":"9-6","questionText":"Which library is commonly used for database operations in KMP?","options":["Room","SQLDelight","Realm","All of the above"],"correctAnswerIndex":1,"explanation":"SQLDelight is a popular library for database operations in Kotlin Multiplatform."},{"id":"9-7","questionText":"What is the purpose of the kotlinx-atomicfu library?","options":["To create a new module","To handle atomic operations","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx-atomicfu is a library for handling atomic operations in Kotlin Multiplatform."},{"id":"9-8","questionText":"Which library is commonly used for image loading in KMP?","options":["Glide","Coil","KMP-Napier","All of the above"],"correctAnswerIndex":2,"explanation":"KMP-Napier is a popular library for image loading in Kotlin Multiplatform."},{"id":"9-9","questionText":"What is the purpose of the kotlinx-html library?","options":["To create a new module","To generate HTML","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"kotlinx-html is a library for generating HTML in Kotlin Multiplatform."},{"id":"9-10","questionText":"Which library is commonly used for testing in KMP?","options":["JUnit","Kotlin Test","MockK","All of the above"],"correctAnswerIndex":3,"explanation":"Kotlin Multiplatform supports multiple testing libraries, including JUnit, Kotlin Test, and MockK."}]},
    {"id":"10","title":"iOS Basics","description":"Test your knowledge of iOS fundamentals","category":"iOS","difficulty":"Beginner","questions":[{"id":"10-1","questionText":"What is Swift?","options":["A programming language","A UI framework for building iOS applications","A database management system","An operating system"],"correctAnswerIndex":0,"explanation":"Swift is a programming language developed by Apple for building iOS, macOS, watchOS, and tvOS applications."},{"id":"10-2","questionText":"Which UI framework is commonly used for building iOS apps?","options":["UIKit","SwiftUI","Core Data","Core Animation"],"correctAnswerIndex":0,"explanation":"UIKit is a UI framework commonly used for building iOS apps."},{"id":"10-3","questionText":"What is the purpose of an iOS Storyboard?","options":["To create a new app","To visually design and layout the UI of an iOS app (using Interface Builder) and manage navigation (segues) between screens","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"An iOS Storyboard is a file that lets you visually design and layout the UI of an iOS app (using Interface Builder) and manage navigation (segues) between screens."},{"id":"10-4","questionText":"What is Swift?","options":["A programming language","A UI framework","A database management system","An operating system"],"correctAnswerIndex":0,"explanation":"Swift is a programming language developed by Apple for iOS development."},{"id":"10-5","questionText":"Which UI framework is commonly used for iOS apps?","options":["UIKit","SwiftUI","Core Data","Core Animation"],"correctAnswerIndex":0,"explanation":"UIKit is a UI framework commonly used for building iOS apps."},{"id":"10-6","questionText":"What is the purpose of an iOS Storyboard?","options":["To create a new app","To design UI visually","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"An iOS Storyboard is used to design UI visually using Interface Builder."},{"id":"10-7","questionText":"Which component is used to create a button in iOS?","options":["UIButton","UIView","UILabel","UITextField"],"correctAnswerIndex":0,"explanation":"UIButton is a component used to create buttons in iOS."},{"id":"10-8","questionText":"What is the purpose of the ViewController?","options":["To create a new app","To manage a view and its subviews","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"A ViewController manages a view and its subviews in iOS."},{"id":"10-9","questionText":"Which component is used to create a text input field?","options":["UITextField","UILabel","UIButton","UIView"],"correctAnswerIndex":0,"explanation":"UITextField is a component used to create text input fields in iOS."},{"id":"10-10","questionText":"What is the purpose of Auto Layout?","options":["To create a new app","To create responsive layouts","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Auto Layout is a system for creating responsive layouts in iOS."}]},
    {"id":"11","title":"iOS Intermediate","description":"Intermediate concepts in iOS development","category":"iOS","difficulty":"Intermediate","questions":[{"id":"11-1","questionText":"What is an iOS delegate?","options":["A UI component","A design pattern (or mechanism) that lets one object (the delegate) act on behalf of (or in coordination with) another object (the delegator) to handle events or customize behavior","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"An iOS delegate is a design pattern (or mechanism) that lets one object (the delegate) act on behalf of (or in coordination with) another object (the delegator) to handle events or customize behavior."},{"id":"11-2","questionText":"Which library is commonly used for networking in an iOS app?","options":["Alamofire","URLSession","AFNetworking","Moya"],"correctAnswerIndex":0,"explanation":"Alamofire is a popular library for networking in an iOS app."},{"id":"11-3","questionText":"What is the purpose of an iOS CocoaPods?","options":["To create a new app","To manage dependencies (or third-party libraries) for an iOS project","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"CocoaPods is a dependency manager for Swift and Objective-C Cocoa projects."},{"id":"11-4","questionText":"What is an iOS delegate?","options":["A UI component","A design pattern for communication","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"An iOS delegate is a design pattern for communication between objects."},{"id":"11-5","questionText":"Which library is commonly used for networking in iOS?","options":["Alamofire","URLSession","AFNetworking","Moya"],"correctAnswerIndex":0,"explanation":"Alamofire is a popular library for networking in iOS."},{"id":"11-6","questionText":"What is the purpose of CocoaPods?","options":["To create a new app","To manage dependencies","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"CocoaPods is a dependency manager for iOS projects."},{"id":"11-7","questionText":"Which framework is used for data persistence in iOS?","options":["Core Data","UserDefaults","Keychain","All of the above"],"correctAnswerIndex":3,"explanation":"iOS provides multiple frameworks for data persistence, including Core Data, UserDefaults, and Keychain."},{"id":"11-8","questionText":"What is the purpose of the NotificationCenter?","options":["To create a new app","To handle communication between components","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"NotificationCenter is used to handle communication between components in iOS."},{"id":"11-9","questionText":"Which library is commonly used for image loading in iOS?","options":["SDWebImage","Kingfisher","AlamofireImage","All of the above"],"correctAnswerIndex":3,"explanation":"iOS supports multiple libraries for image loading, including SDWebImage, Kingfisher, and AlamofireImage."},{"id":"11-10","questionText":"What is the purpose of the Grand Central Dispatch (GCD)?","options":["To create a new app","To handle concurrency","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Grand Central Dispatch (GCD) is used to handle concurrency in iOS."}]},
    {"id":"12","title":"iOS Advanced","description":"Advanced iOS concepts and best practices","category":"iOS","difficulty":"Advanced","questions":[{"id":"12-1","questionText":"What is an iOS Grand Central Dispatch (GCD)?","options":["A UI component","A low-level API provided by Apple to manage concurrent tasks (or threads) and perform asynchronous operations (e.g., dispatching work to a queue) in an iOS app","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"Grand Central Dispatch (GCD) is a low-level API provided by Apple to manage concurrent tasks (or threads) and perform asynchronous operations (e.g., dispatching work to a queue) in an iOS app."},{"id":"12-2","questionText":"Which library is commonly used for reactive programming in an iOS app?","options":["Combine","RxSwift","ReactiveCocoa","All of the above"],"correctAnswerIndex":3,"explanation":"iOS supports multiple libraries for reactive programming, including Combine, RxSwift, and ReactiveCocoa."},{"id":"12-3","questionText":"What is the purpose of an iOS Core Data?","options":["To create a new app","To provide a framework for managing the model layer objects (or data) of an iOS app, including persistence (e.g., storing data in a SQLite database) and relationships between objects","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Core Data is a framework provided by Apple for managing the model layer objects (or data) of an iOS app, including persistence (e.g., storing data in a SQLite database) and relationships between objects."},{"id":"12-4","questionText":"What is Grand Central Dispatch (GCD)?","options":["A UI component","A concurrency framework","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"Grand Central Dispatch (GCD) is a concurrency framework in iOS."},{"id":"12-5","questionText":"Which library is commonly used for reactive programming in iOS?","options":["Combine","RxSwift","ReactiveCocoa","All of the above"],"correctAnswerIndex":3,"explanation":"iOS supports multiple libraries for reactive programming, including Combine, RxSwift, and ReactiveCocoa."},{"id":"12-6","questionText":"What is the purpose of Core Data?","options":["To create a new app","To manage data persistence","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Core Data is a framework for managing data persistence in iOS."},{"id":"12-7","questionText":"Which library is commonly used for testing in iOS?","options":["XCTest","Quick","Nimble","All of the above"],"correctAnswerIndex":3,"explanation":"iOS supports multiple testing libraries, including XCTest, Quick, and Nimble."},{"id":"12-8","questionText":"What is the purpose of the Swift Package Manager?","options":["To create a new app","To manage dependencies","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Swift Package Manager is a tool for managing dependencies in iOS projects."},{"id":"12-9","questionText":"Which library is commonly used for UI testing in iOS?","options":["XCTest","KIF","EarlGrey","All of the above"],"correctAnswerIndex":3,"explanation":"iOS supports multiple libraries for UI testing, including XCTest, KIF, and EarlGrey."},{"id":"12-10","questionText":"What is the purpose of the Instruments tool?","options":["To create a new app","To profile and debug apps","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Instruments is a tool for profiling and debugging iOS apps."}]},
    {"id":"13","title":"Android Basics","description":"Test your knowledge of Android fundamentals","category":"Android","difficulty":"Beginner","questions":[{"id":"13-1","questionText":"What is Kotlin (in Android)?","options":["A programming language","A UI framework for building Android applications","A database management system","An operating system"],"correctAnswerIndex":0,"explanation":"Kotlin is a programming language (developed by JetBrains) that is officially supported by Google for building Android applications."},{"id":"13-2","questionText":"Which UI framework is commonly used for building Android apps?","options":["Jetpack Compose","XML (using Layouts such as LinearLayout, ConstraintLayout, etc.)","Core Data","Core Animation"],"correctAnswerIndex":1,"explanation":"XML (using Layouts such as LinearLayout, ConstraintLayout, etc.) is a common UI framework for building Android apps."},{"id":"13-3","questionText":"What is the purpose of an Android Activity?","options":["To create a new app","To represent a single screen (or UI) with which the user can interact (e.g., a login screen, a home screen, etc.)","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"An Android Activity represents a single screen (or UI) with which the user can interact (e.g., a login screen, a home screen, etc.)."},{"id":"13-4","questionText":"What is Kotlin in Android?","options":["A programming language","A UI framework","A database management system","An operating system"],"correctAnswerIndex":0,"explanation":"Kotlin is a programming language officially supported by Google for Android development."},{"id":"13-5","questionText":"Which UI framework is commonly used for Android apps?","options":["Jetpack Compose","XML Layouts","Core Data","Core Animation"],"correctAnswerIndex":1,"explanation":"XML Layouts are commonly used for building Android apps."},{"id":"13-6","questionText":"What is the purpose of an Android Activity?","options":["To create a new app","To represent a screen","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"An Android Activity represents a screen in an Android app."},{"id":"13-7","questionText":"Which component is used to create a button in Android?","options":["Button","TextView","EditText","View"],"correctAnswerIndex":0,"explanation":"Button is a component used to create buttons in Android."},{"id":"13-8","questionText":"What is the purpose of the Layout system?","options":["To create a new app","To arrange UI elements","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"The Layout system is used to arrange UI elements in Android."},{"id":"13-9","questionText":"Which component is used to create a text input field?","options":["EditText","TextView","Button","View"],"correctAnswerIndex":0,"explanation":"EditText is a component used to create text input fields in Android."},{"id":"13-10","questionText":"What is the purpose of the AndroidManifest.xml?","options":["To create a new app","To declare app components and permissions","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"AndroidManifest.xml is used to declare app components and permissions."}]},
    {"id":"14","title":"Android Intermediate","description":"Intermediate concepts in Android development","category":"Android","difficulty":"Intermediate","questions":[{"id":"14-1","questionText":"What is an Android ViewModel?","options":["A UI component","A class (part of the Android Architecture Components) that is designed to store and manage UI-related data (or state) in a lifecycle conscious way (e.g., surviving configuration changes such as screen rotations) so that the data is not lost when an Activity (or Fragment) is recreated.","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"An Android ViewModel is a class (part of the Android Architecture Components) that is designed to store and manage UI-related data (or state) in a lifecycle conscious way (e.g., surviving configuration changes such as screen rotations) so that the data is not lost when an Activity (or Fragment) is recreated."},{"id":"14-2","questionText":"Which library is commonly used for networking in an Android app?","options":["Retrofit","Volley","OkHttp","Alamofire"],"correctAnswerIndex":0,"explanation":"Retrofit is a popular library for networking in an Android app."},{"id":"14-3","questionText":"What is the purpose of an Android Gradle?","options":["To create a new app","To manage dependencies (or third-party libraries) and build (or compile) an Android project (e.g., converting Kotlin or Java code into an APK or AAB).","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Gradle is a build automation tool used to manage dependencies (or third-party libraries) and build (or compile) an Android project (e.g., converting Kotlin or Java code into an APK or AAB)."},{"id":"14-4","questionText":"What is an Android ViewModel?","options":["A UI component","A class for managing UI data","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"An Android ViewModel is a class for managing UI data in a lifecycle conscious way."},{"id":"14-5","questionText":"Which library is commonly used for networking in Android?","options":["Retrofit","Volley","OkHttp","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple libraries for networking, including Retrofit, Volley, and OkHttp."},{"id":"14-6","questionText":"What is the purpose of Gradle?","options":["To create a new app","To build and manage dependencies","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Gradle is a build system used to build and manage dependencies in Android projects."},{"id":"14-7","questionText":"Which library is commonly used for image loading in Android?","options":["Glide","Picasso","Coil","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple libraries for image loading, including Glide, Picasso, and Coil."},{"id":"14-8","questionText":"What is the purpose of the Room database?","options":["To create a new app","To manage local data storage","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Room is a persistence library for managing local data storage in Android."},{"id":"14-9","questionText":"Which library is commonly used for dependency injection in Android?","options":["Dagger","Koin","Hilt","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple libraries for dependency injection, including Dagger, Koin, and Hilt."},{"id":"14-10","questionText":"What is the purpose of the WorkManager?","options":["To create a new app","To manage background tasks","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"WorkManager is used to manage background tasks in Android."}]},
    {"id":"15","title":"Android Advanced","description":"Advanced Android concepts and best practices","category":"Android","difficulty":"Advanced","questions":[{"id":"15-1","questionText":"What is an Android WorkManager?","options":["A UI component","A library (part of the Android Jetpack) that lets you schedule deferrable (or background) tasks (e.g., uploading a file, syncing data, etc.) that are guaranteed to run (even if the app is closed or the device is restarted) and that respect battery and system constraints (e.g., doze mode, battery saver, etc.).","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"WorkManager is a library (part of the Android Jetpack) that lets you schedule deferrable (or background) tasks (e.g., uploading a file, syncing data, etc.) that are guaranteed to run (even if the app is closed or the device is restarted) and that respect battery and system constraints (e.g., doze mode, battery saver, etc.)."},{"id":"15-2","questionText":"Which library is commonly used for reactive programming in an Android app?","options":["RxJava","LiveData","Flow (kotlinx.coroutines)","Combine"],"correctAnswerIndex":0,"explanation":"RxJava is a popular library for reactive programming in an Android app."},{"id":"15-3","questionText":"What is the purpose of an Android Room (persistence library)?","options":["To create a new app","To provide an abstraction layer over SQLite (or a local database) so that you can perform database operations (e.g., insert, update, delete, query) in an Android app using Kotlin (or Java) (and annotations) instead of writing raw SQL queries.","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Room (persistence library) is a library (part of the Android Jetpack) that provides an abstraction layer over SQLite (or a local database) so that you can perform database operations (e.g., insert, update, delete, query) in an Android app using Kotlin (or Java) (and annotations) instead of writing raw SQL queries."},{"id":"15-4","questionText":"What is an Android WorkManager?","options":["A UI component","A library for background tasks","A state management solution","A navigation library"],"correctAnswerIndex":1,"explanation":"WorkManager is a library for managing background tasks in Android."},{"id":"15-5","questionText":"Which library is commonly used for reactive programming in Android?","options":["RxJava","LiveData","Flow","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple libraries for reactive programming, including RxJava, LiveData, and Flow."},{"id":"15-6","questionText":"What is the purpose of the Room persistence library?","options":["To create a new app","To manage local data storage","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Room is a persistence library for managing local data storage in Android."},{"id":"15-7","questionText":"Which library is commonly used for testing in Android?","options":["JUnit","Espresso","Mockito","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple testing libraries, including JUnit, Espresso, and Mockito."},{"id":"15-8","questionText":"What is the purpose of the Android Jetpack?","options":["To create a new app","To provide a set of libraries and tools","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Android Jetpack is a set of libraries and tools for building Android apps."},{"id":"15-9","questionText":"Which library is commonly used for UI testing in Android?","options":["Espresso","UI Automator","Robolectric","All of the above"],"correctAnswerIndex":3,"explanation":"Android supports multiple libraries for UI testing, including Espresso, UI Automator, and Robolectric."},{"id":"15-10","questionText":"What is the purpose of the Android Profiler?","options":["To create a new app","To profile and debug apps","To handle user input","To manage navigation"],"correctAnswerIndex":1,"explanation":"Android Profiler is a tool for profiling and debugging Android apps."}]
  ]
} 